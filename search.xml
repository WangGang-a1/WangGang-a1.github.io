<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SQL server安装及其错误分析</title>
      <link href="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/"/>
      <url>/2021/09/27/sqlserveranzhuangjiqicuowufenxi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><blockquote><p>SQL是英文Structured Query Language的缩写，意思为结构化查询语言。SQL语言的主要功能就是同各种数据库建立联系，进行沟通。按照ANSI(美国国家标准协会)的规定，SQL被作为关系型数据库管理系统的标准语言。SQL Server是由Microsoft开发和推广的关系数据库管理系统（RDBMS）。</p></blockquote><p><em><strong>注意；要规划好安装的目录，最好专门新建一个大的文件夹存放此次实践，这也是一个好的习惯！！</strong></em><br><strong>友情提示：很多老师或指导可能会让你们默认安装，那是因为他们对电脑一无所知，这里建议不要默认安装，去其他盘例如D盘去新建个文件夹再去安装，这里文件夹不要中文，否则可能会报错。</strong></p><blockquote><p>一些小知识：通俗来讲默认路径是c盘而c盘为系统所在存储空间，由于C盘为系统盘需要留有一些空间来缓冲所以C盘存放文件不易过多，因为系统本身在运行中一些日志和碎片都是存放在C盘，存放多了系统会很卡顿。通俗的讲就是C盘不要放文件和软件。</p></blockquote><blockquote><p>对于报错：一般软件报错时不应该第一时间去删除什么而是理性分析，是不是电脑环境没有安装完全，是不是软件服务没有开启，是不是权重不对，一昧的重装不仅不会修复错误，还可能导致bug更多甚至电脑环境紊乱（来自MySQL经验）</p></blockquote><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL1.jpg" alt="完整安装效果"></p><h2 id="安装SQL-Server"><a href="#安装SQL-Server" class="headerlink" title="安装SQL Server"></a>安装SQL Server</h2><p>我们前往微软官网下载<a href="https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads">SQL serverExpress 版本</a> 也可以点击<a href="https://download.microsoft.com/download/7/f/8/7f8a9c43-8c8a-4f7c-9f92-83c18d96b681/SQL2019-SSEI-Expr.exe">直链</a> 直接下载<br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL2.jpg" alt="下载Express 版本"><br>使用Win+E键打开文件资源管理器找到下载目录，双击打开SQL2019-SSEI-Expr.exe<br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL3.jpg" alt="打开安装包"><br>选择自定义安装<br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL4.jpg" alt="自定义安装"><br>目录改为D盘，尽量不要安装在C盘（C盘满了的话系统不稳定卡顿）<br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL5.jpg" alt="更改安装路径"><br>等待下载完成<br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL6.jpg" alt="安装包下载中"><br>点击全新SQL Server独立安装<br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL7.jpg" alt="点第一个"><br>点击后进入一个安装页面，然后等待各种检测<br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL8.jpg" alt="接受许可下一步"><br>然后一路下一步就可以，到功能选择时保持默认，因为每个人每个厂商电脑不同，出厂安装的环境也不同，如果都取消勾选可能因为没有必备环境而安装失败，这里目录不用改，环境默认安装C盘。</p><blockquote><p>ps：有些书籍和老师可能说不让勾选，但是新版本python、java和R文件都是必须项，必要的环境</p></blockquote><p><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL9.jpg" alt="默认即可"><br>实例配置默认和自定义都可，接下来就是一路默认，到数据库引擎配置时选择混合模式，密码自定；<br><em><strong>注意：多用户则选择管理员账户进行授权！！！</strong></em><br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL10.jpg" alt="密码输入"></p><p>然后就是接受各种条例，再点击下一步（这里是安装数据库引擎的环境），然后慢慢等待安装成功~~<br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL11.jpg" alt="等待"><br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL12.jpg" alt="安装完成"><br>到这里我们SQL Server已经安装完成了，我们去下载<a href="https://download.microsoft.com/download/1/e/c/1ec92162-142d-4fed-a575-6e2195b65a66/SSMS-Setup-CHS.exe">SSMS管理工具</a><br>下载完成后去下载路径打开安装包，这里最好更改一下安装路径不要安装再C盘，更改完后点击安装即可<br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL13.jpg" alt="更改路径"><br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL13.jpg" alt="安装中"><br><img src="/2021/09/27/sqlserveranzhuangjiqicuowufenxi/SQL13.jpg" alt="安装完成"><br>安装完成后重启即可，到这里安装工作就完成了！！！</p><h2 id="错误分析及处理方法"><a href="#错误分析及处理方法" class="headerlink" title="错误分析及处理方法"></a>错误分析及处理方法</h2>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 安装教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dual deployment Hexo</title>
      <link href="/2021/09/17/dualdeploymenthexo/"/>
      <url>/2021/09/17/dualdeploymenthexo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote><p>很多人在建立一个Hexo架构的博客之后可能还会开分站，例如我就用Hexo开了一个文字站主要分享一些生活心得和各种文案。但是有很多小白都不会或根本不懂得如何去建立新的Hexo网站，而网上的教程又鱼龙混杂，让人分不清好坏，甚至教程都不全，所以我想着出一篇教程给大家做个参考。<br><em><strong>该篇教程也同样适用于连接多个git仓库</strong></em><br>ps:由于面向小白，可能会比较啰嗦，有基础的可以直接跳过前面的从创建ssh密钥开始操作。</p></blockquote><h2 id="分析阶段"><a href="#分析阶段" class="headerlink" title="分析阶段"></a>分析阶段</h2><p>由于 github 是使用 SSH key 的 fingerprint (对应的公钥id_rsa_pub)来判定你是哪个账户，而不是通过用户名，如果是在多台电脑上使用一个账号，可以为该账号添加多个 SSH key，如果是一台电脑使用多个账号，则分别生成多个 SSH key 添加到对应的账户即可。所以本文要实现的是公号和私号在 git 上同时使用，两者互不干扰。<br><strong>通俗的讲就是一个GitHub账号可以匹配多个ssh公钥，而一个ssh公钥只能链接一个GitHub仓库</strong><br>所以在这里我们需要再建立一个或多个GitHub，并创建与之相对应的ssh密钥 <em>ps:有几个GitHub仓库就建立几个ssh公钥</em><br>到这里分析就结束了，接下来开始操作ing</p><h2 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h2><h3 id="建立GitHub仓库-账号"><a href="#建立GitHub仓库-账号" class="headerlink" title="建立GitHub仓库/账号"></a>建立GitHub仓库/账号</h3><blockquote><p>如果已经有账号或者创建好仓库跳过这一阶段</p></blockquote><p>####第一步：注册####<br>进入<a href="https://blog.qltxy.cn/">GitHub官网</a> 点击sign up进入注册页面输入邮箱，点击继续然后输入密码，GitHub会给你的邮箱发一封确认邮件，确认之后我们的GitHub账号就注册好了。<br><img src="/2021/09/17/dualdeploymenthexo/Hexo1.jpg" alt="注册页面"><br><img src="/2021/09/17/dualdeploymenthexo/Hexo2.jpg" alt="输入邮箱"><br>####第二步：建立仓库####<br>登录<a href="https://github.com/login">GitHub</a> 依次点击右上角头像-Your repositories-New进入新建仓库页面<br><img src="/2021/09/17/dualdeploymenthexo/Hexo3.jpg"><br><img src="/2021/09/17/dualdeploymenthexo/Hexo4.jpg"></p><blockquote><p>仓库名称建议填写与用户名一样的名称（也可以不填没有特殊要求）</p></blockquote><p>都填写好了之后点击Create repository,到这里一个GitHub仓库就建好了<br><img src="/2021/09/17/dualdeploymenthexo/Hexo5.jpg"></p><p>###建立ssh密钥<br>打开电脑终端，也可以使用<a href="https://git-scm.com/downloads">Git</a> 我个人使用的就是Git软件<br>使用<em><strong>cd ~/.ssh</strong></em>切换工作目录，然后使用如下命令生成新的密钥：</p><pre><code class="bash">ssh-keygen -t rsa -C &quot;Your Email Address&quot;</code></pre><p><em><strong>Your Email Address为你的邮箱地址</strong></em></p><pre><code class="bash">Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/29453/.ssh/id_rsa):</code></pre><p>这里给你的密钥起个明治（随便输入），输入完了之后回车</p><pre><code class="bash">Enter passphrase (empty for no passphrase):</code></pre><p>这里给你的密钥设置个密码，也可以不设置，一路回车就建立完成了~（设置了密码会再次验证一次）</p><p>###添加 SSH key<br>打开<strong>C:\Users\用户名.ssh</strong>这个目录找到你新建立的公钥，用n++打开<strong>（密钥名称）.pub</strong>后缀的这个文件并复制全部内容，<br>登陆github 账号，在 Settings —&gt; SSH and GPG keys 中，点击 “new SSH key”，把公钥的内容分别添加到相应的账号中。<br><img src="/2021/09/17/dualdeploymenthexo/Hexo6.jpg"></p><p>###配置ssh双部署</p><h4 id="修改ssh配置实现双部署"><a href="#修改ssh配置实现双部署" class="headerlink" title="修改ssh配置实现双部署"></a>修改ssh配置实现双部署</h4><p>在 ~/.ssh目录下新建 config 文件，令不同 Host 实际映射到同一 HostName，但密钥文件不同。</p><pre><code class="bash">touch config</code></pre><p>打开confing文件加上以下内容</p><pre><code class="bash"># one (first account)Host one.github.com   #.github.com前面的可以自己填写HostName github.comPreferredAuthentications publickeyUser one             #User后面的可以自己填写IdentityFile ~/.ssh/id_rsa_one# two(second account)Host two.github.com   #.github.com前面的可以自己填写HostName github.comPreferredAuthentications publickeyUser two              #User后面的可以自己填写IdentityFile ~/.ssh/id_rsa_two</code></pre><p>修改完后保存退出！记得保存否则不生效</p><p>####修改Hexo的git<br>进入你Hexo的根目录打开.deploy_git.git文件夹，再此文件夹内运行Git，并运行以下代码：</p><pre><code class="bash">git config  --unset user.namegit config  --unset user.emailgit config --global --unset user.namegit config --global --unset user.email</code></pre><blockquote><p>这些代码的目的是删除之前的用户名和邮箱并取消全局用户名和邮箱</p></blockquote><p>之后运行以下代码设置局部用户名和邮箱：</p><pre><code class="bash">git config user.name &quot;Your Username&quot;git config user.email &quot;Your Email Address&quot;</code></pre><p><strong>Your Username，Your Email Address分别为你的GitHub名称和你注册GitHub时的邮箱。因为使用仓库前，要通过这两项标明自己的身份，所以必须正确！！！</strong></p><p>最后一步，也是最重要的一步，打开Hexo的_config.yml文件在<a href="mailto:&#103;&#105;&#116;&#64;&#103;&#105;&#116;&#x68;&#117;&#x62;&#46;&#x63;&#x6f;&#109;">&#103;&#105;&#116;&#64;&#103;&#105;&#116;&#x68;&#117;&#x62;&#46;&#x63;&#x6f;&#109;</a>的github和@中间加上你在Host前面起的名称<br><img src="/2021/09/17/dualdeploymenthexo/Hexo7.jpg"><br>例如我的：ssh配置文件内容是</p><pre><code class="bash"># one (first account)Host blog.github.comHostName github.comPreferredAuthentications publickeyUser WangGang-a1IdentityFile ~/.ssh/blog# two(second account) Host wenan.github.comHostName github.comPreferredAuthentications publickeyUser nl-anonymousIdentityFile ~/.ssh/wenan</code></pre><p>那么我就应该改成<a href="mailto:&#x67;&#x69;&#116;&#64;&#x62;&#108;&#111;&#103;&#46;&#x67;&#x69;&#x74;&#x68;&#117;&#98;&#46;&#x63;&#x6f;&#109;">&#x67;&#x69;&#116;&#64;&#x62;&#108;&#111;&#103;&#46;&#x67;&#x69;&#x74;&#x68;&#117;&#98;&#46;&#x63;&#x6f;&#109;</a>或者是<a href="mailto:&#x67;&#x69;&#116;&#x40;&#x77;&#101;&#x6e;&#97;&#x6e;&#x2e;&#103;&#105;&#116;&#x68;&#117;&#98;&#x2e;&#99;&#111;&#109;">&#x67;&#x69;&#116;&#x40;&#x77;&#101;&#x6e;&#97;&#x6e;&#x2e;&#103;&#105;&#116;&#x68;&#117;&#98;&#x2e;&#99;&#111;&#109;</a></p><blockquote><p>到这里我的教程就圆满结束了，分别运行一下hexo d试试吧，会有神奇的效果哦~</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
            <tag> 博客 </tag>
            
            <tag> 经验 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人博客</title>
      <link href="/2021/08/23/dajiangerenboke/"/>
      <url>/2021/08/23/dajiangerenboke/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><blockquote><p>Hexo是一个极速、简单且强大的静态博客架构。它使用 Node.js作为构建引擎，上百个文件在几秒钟内便可构建完成；而且拥有着丰富的插件库，因开源而显得生机勃勃，可扩展性很好；最重要的，它支持 Markdown 作为书写语言，极大地方便了博客的撰写。<br><em><strong>注意要规划好安装的目录，最好专门新建一个大的文件夹存放此次实践，这也是一个好的习惯！！</strong></em></p></blockquote><h2 id="先展示一下效果图"><a href="#先展示一下效果图" class="headerlink" title="先展示一下效果图"></a>先展示一下效果图</h2><p><img src="/2021/08/23/dajiangerenboke/me1.png"><br><a href="https://blog.qltxy.cn/">逆鳞科技的部落阁</a></p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>首先，我们需要现安装一些软件来搭建博客环境。</p><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>Node.js<a href="https://nodejs.org/zh-cn/">官网下载地址</a>，安装过程没什么可说的，一直点下一步即可。<br><img src="/2021/08/23/dajiangerenboke/githexo7.png"><br><img src="/2021/08/23/dajiangerenboke/githexo8.png"><br>安装完成了！<br><img src="/2021/08/23/dajiangerenboke/githexo9.png"></p><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>Git<a href="https://git-scm.com/downloads">官网下载地址</a>，安装过程也是没有多少需要注意的，我们一路Next即可<br><img src="/2021/08/23/dajiangerenboke/githexo10.png"><br><img src="/2021/08/23/dajiangerenboke/githexo11.png"><br>安装完成了！</p><h3 id="Notepad"><a href="#Notepad" class="headerlink" title="Notepad++"></a>Notepad++</h3><p>Notepad++<a href="https://www.baidu.com/link?url=I2C2tSD-3mql1QAwZNrg906ryEWhlBwwqMQOVUFMS8lF_SsR_jUf7DbF61qPfG2n&wd=&eqid=c8a3949d00007499000000055f85859e">官网下载地址</a>，这个跟前两个一样也是一路next，没有什么需要注意的，这里就不做讲解了。</p><h3 id="VScode（与Notepad-二选一）"><a href="#VScode（与Notepad-二选一）" class="headerlink" title="VScode（与Notepad++二选一）"></a>VScode（与Notepad++二选一）</h3><p>VScode<a href="https://code.visualstudio.com/download">官网下载地址</a></p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>1.创建博客安装路径，在此路径右击找到GitBash,例如我们的目录为<br>D:\Myblog\Blog，右击Git Bash Here<br>2.打开Git Bash以后输入npm install -g hexo-cli安装Hexo，<br>安装好以后不要关闭Git Bash，接下来还要用。</p><p><em><strong>注：</strong></em></p><p>如果安装过慢导致失败，可以更换淘宝的 npm 源，命令如下：</p><pre><code class="bash">npm config set registry https://registry.npm.taobao.org</code></pre><p>验证是否设置成功：</p><pre><code class="bash">npm config get registry</code></pre><p>如果返回如下结果则设置成功：</p><blockquote><p><a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org/</a></p></blockquote><p><img src="/2021/08/23/dajiangerenboke/githexo19.png"></p><h2 id="资源准备"><a href="#资源准备" class="headerlink" title="资源准备"></a>资源准备</h2><h3 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册GitHub</h3><p>1.浏览器访问<a href="https://github.com/">GitHub官方网站</a><br><img src="/2021/08/23/dajiangerenboke/githexo1.png"><br>进入官网页面之后，依次填写完成用户名、邮箱和密码信息后点击Sign up for Github。<br><strong>注意Username、Email和Pssword一定要记住，后边要多次使用，如果太长比较难记，建议记在记事本上。</strong><br>2.注册完登录之后，先选中Unlimited public repositories for free(默认是选中的)，再点击Continue即可。<br><img src="/2021/08/23/dajiangerenboke/githexo2.png"><br>接下来，直接点击skip this step<br><img src="/2021/08/23/dajiangerenboke/githexo3.png"><br>3.然后如下图所示，先点击头像右边向下的小箭头，再选择Your profile。<br><img src="/2021/08/23/dajiangerenboke/githexo4.png"><br>然后先点击右上角的“+”，再点击New repository。<br><img src="/2021/08/23/dajiangerenboke/githexo5.png"><br>这时会验证你的邮箱，将收到的6位码填入，邮箱通过验证之后，这里需要就要输入新建仓库的信息<br>这里我们输入仓库名，它的写法是这样的,可不要任性去随意定义，就是username.github.io。这里我可吃了亏，否则是会失败的。其他的内容不需要操作，默认的public即可。</p><blockquote><p>例如：<br>username:WangGang-a1<br>对应的仓库名就是:WangGang-a1.github.io</p></blockquote><p><img src="/2021/08/23/dajiangerenboke/githexo6.png"><br>恭喜！您注册完成并创建了GitHub个人博客的仓库。</p><blockquote><p>关于Github的使用在这里咱们详细讲解了，如果有想要了解的可以自行百度相关教程</p></blockquote><h3 id="注册Coding"><a href="#注册Coding" class="headerlink" title="注册Coding"></a>注册Coding</h3><blockquote><p>为什么使用coding而不使用码云（<a href="https://gitee.com/">gitee</a>）呢?因为码云的的自定义域名要钱啊，身为学生的我还是退而求其次的选择了coding，而且现在coding对个人博客还是很友好的。</p></blockquote><p>1.浏览器访问<a href="https://coding.net/">Coding官方网站</a><br><img src="/2021/08/23/dajiangerenboke/coding1.png"><br>进入官网页面之后，我们点击登陆，使用微信登陆即可，跟腾讯云账号是有链接的。</p><p>2.建立仓库<br>依次点击项目，创建项目，选择代码托管项目<br><em><strong>注意：</strong></em> 项目名称与你的用户名相同而且项目需要选择开源（公开），不能建立私人仓库。<br><img src="/2021/08/23/dajiangerenboke/coding2.png"><br><img src="/2021/08/23/dajiangerenboke/coding3.png"></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="Git配置SSH"><a href="#Git配置SSH" class="headerlink" title="Git配置SSH"></a>Git配置SSH</h3><p>1.安装完Git之后，我们需要使用SSH将本地Git项目与远程的GitHub建立联系。<br>Git安装之后会生成两个版本（Git Bash和Git Bash），我们使用的是Git Bash<br><img src="/2021/08/23/dajiangerenboke/githexo13.png"><br>点击Git Bash，依次输入以下代码：</p><pre><code class="bash">git config --global user.name &quot;Your Username&quot;   #Your Username为你的用户名(Github)git config --global user.email &quot;Your Email Address&quot;   #Your Email Address为你的邮箱地址(Github)</code></pre><p><strong>注意这里Your Username和Your Email Address必须正确。因为使用仓库前，要通过这两项标明自己的身份。</strong></p><p>2.继续输入以下命令：</p><pre><code class="bash">cd ~/.sshssh-keygen -t rsa -C &quot;Your Email Address&quot;</code></pre><p><strong>输入cd ~/.ssh后，提示：No such file or directory， 说明第一次使用Git，对结果无影响。</strong><br><strong>代码说明：</strong><br><strong>cd ~/.ssh用来检查本机的ssh密钥，ssh-keygen -t rsa -C “Your Email Address”用于生成新的SSH Key。</strong><br>执行命令之后，会出现下面内容：</p><pre><code class="bash">Generating public/private rsa key pair.Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):</code></pre><p>出现该结果直接回车（也可以自定义key名称，一般默认就好）<br>会出现输入密码<br>Enter passphrase (empty for no passphrase):【输入加密串】【加密串我们看不见，你直接输入就好，输完密码回车键确定】<br>Enter same passphrase again:【再次输入加密串】<br>如果密码输入不一致，会提示再次输入：<br>Passphrases do not match. Try again.<br>这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。<br>如果出现下图的界面，就说明key生成成功。同时从Your public key has been saved in /c/Users/User/.ssh/id_rsa.pub.能看到ssh key保存的位置。<br><img src="/2021/08/23/dajiangerenboke/githexo14.png"></p><h3 id="添加-SSH-Key-到-GitHub"><a href="#添加-SSH-Key-到-GitHub" class="headerlink" title="添加 SSH Key 到 GitHub"></a>添加 SSH Key 到 GitHub</h3><p>1.回到Github，按照顺序点击右上角的头像-Settings-SSH and GPG keys -New SSH key<br><img src="/2021/08/23/dajiangerenboke/githexo15.png"><br>2.然后使用Notepad++打开本地id_rsa.pub（你的key名称）文件（ssh key文件）。如果看不到这个文件，则没有开启查看隐藏文件权限。将id_rsa.pub（SSH key文件）里面的内容全选复制粘贴到刚刚GitHub上通过New SSH key创建的key方框里，Title随便写或者直接空着不写也可以，直接点击Add SHH key就好了。<br><img src="/2021/08/23/dajiangerenboke/githexo16.png"><br><img src="/2021/08/23/dajiangerenboke/githexo17.png"><br>3.在GitHub添加SSH key之后，回到Git Bash界面输入ssh -T <a href="mailto:&#x67;&#x69;&#x74;&#x40;&#103;&#105;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#111;&#x6d;">&#x67;&#x69;&#x74;&#x40;&#103;&#105;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#111;&#x6d;</a>查看是否添加成功，如果出现下图的问题，直接输入yes同意即可！</p><pre><code class="bash">The authenticity of host &#39;github.com (192.30.255.113)&#39; can&#39;t be established.RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8. Are you sure you want to continue connecting (yes/no)? 输入yes之后输入我们项目的密码 nter passphrase for key &#39;/c/Users/User/.ssh/id_rsa&#39;:【这里的密码也是加密串】 </code></pre><p><img src="/2021/08/23/dajiangerenboke/githexo18.png"></p><p>4、出现如下提示时，就是成功了。</p><pre><code class="bash">Hi HandsomeSuperRed! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></pre><h3 id="添加-SSH-Key-到-Coding"><a href="#添加-SSH-Key-到-Coding" class="headerlink" title="添加 SSH Key 到 Coding"></a>添加 SSH Key 到 Coding</h3><p>这一步骤跟GitHub差不多所以我就直接跳过密钥获取教程了<br>1、我们依次点击右上方头像-个人账号设置进入账号设置界面<br>2、个人设置界面依次点击SSH公钥-新建公钥 然后随便输入一个公钥名称之后将我们的公钥复制进内容里面（跟GitHub的一样一个电脑使用一个公钥即可）<br><img src="/2021/08/23/dajiangerenboke/codingSSH1.png"><br><img src="/2021/08/23/dajiangerenboke/codingSSH2.png"><br><img src="/2021/08/23/dajiangerenboke/codingSSH3.png"></p><h2 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h2><h3 id="Hexo部署"><a href="#Hexo部署" class="headerlink" title="Hexo部署"></a>Hexo部署</h3><p>1.安装好hexo之后，执行下面三条命令进行初始化：</p><blockquote><p>hexo init <folder> #初始化hexo(是你要保存博客内容的文件夹的名字。)<br>cd <folder> #进入此目录<br>npm install #安装 </folder></folder></p></blockquote><p>例如我想把博客保存在Hexo目录，上面三条代码就为：</p><pre><code class="bash">hexo init Hexocd Hexonpm install</code></pre><p>执行命令的界面所示：<br><img src="/2021/08/23/dajiangerenboke/githexo21.png"><br><img src="/2021/08/23/dajiangerenboke/githexo22.png"></p><p>2.三条命令执行过后，Hexo的目录就添加了很多内容，而_config.yml文件是我们用次数会比较多，它是博客的一个全局配置文件。<br><img src="/2021/08/23/dajiangerenboke/githexo23.png"></p><p>3.Hexo初始化之后，我们执行下面三条命令对博客进行部署，同时开启本地服务</p><pre><code class="bash">hexo generatehexo deploy hexo server</code></pre><p>效果：</p><p><img src="/2021/08/23/dajiangerenboke/githexo24.png"><br><img src="/2021/08/23/dajiangerenboke/githexo25.png"><br>4.然后系统会出现如下提示：</p><blockquote><p>INFO Start processing</p><p>INFO Hexo is running at <a href="http://localhost:4000/">http://localhost:4000/</a>. Press Ctrl+C to stop.</p></blockquote><p>我们使用浏览器访问，发现Hexo在本地已经部署好了！<br><a href="http://localhost:4000/">http://localhost:4000/</a></p><h3 id="将博客双线部署至Github、coding"><a href="#将博客双线部署至Github、coding" class="headerlink" title="将博客双线部署至Github、coding"></a>将博客双线部署至Github、coding</h3><p>1.找到我们上面说的Hexo的全局配置文件<br><img src="/2021/08/23/dajiangerenboke/githexo27.png"><br>使用Notepad++进行编辑，将deploy一项修改成如图所示：</p><blockquote><p>deploy:<br> type: git<br> message: “”<br> repo:<br>   github: <a href="mailto:&#103;&#105;&#116;&#x40;&#x67;&#105;&#116;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;">&#103;&#105;&#116;&#x40;&#x67;&#105;&#116;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;</a>:WangGang-a1/WangGang-a1.github.io.git,master</p><p>   coding: <a href="mailto:&#x67;&#x69;&#116;&#64;&#101;&#46;&#x63;&#111;&#100;&#105;&#110;&#103;&#46;&#110;&#x65;&#x74;">&#x67;&#x69;&#116;&#64;&#101;&#46;&#x63;&#111;&#100;&#105;&#110;&#103;&#46;&#110;&#x65;&#x74;</a>:nilinkeji/nilinkeji/nilinkeji.git,master</p></blockquote><p><img src="/2021/08/23/dajiangerenboke/githexo28.png"><br><strong>注意:repo需要更改为自己的地址，获取方式如下图，将其复制type后面即可。另外，冒号后面一定要加空格，否则部署会失败</strong><br><img src="/2021/08/23/dajiangerenboke/githexo29.png"><br><img src="/2021/08/23/dajiangerenboke/githexo33.png"></p><p>2.更改完之后保存，我们就可以使用hexo命令发布到仓库中了：</p><pre><code class="bash">hexo chexo ghexo d</code></pre><p>如果出现下面的提示恭喜你成功了！<br><img src="/2021/08/23/dajiangerenboke/githexo31.png"></p><p>3.这样就部署到 GitHub、coding 上了，可到GitHub、coding仓库查看是否更新。</p><p><img src="/2021/08/23/dajiangerenboke/githexo32.png"><br><img src="/2021/08/23/dajiangerenboke/githexo34.png"></p><p>4.GitHub部署成功之后，<a href="https://xxxx.github.io/">https://XXXX.github.io/</a> (只要将一级域名更改成你的账户名即可！)  这个地址就是我们的博客域名了，它可以用来访问你的博客，当然如果你也可以将它修改成自己的域名。<br>推荐一个可以获取免费域名的网站：<a href="https://www.freenom.com/zh/index.html?lang=zh">freenom</a></p><p>5.Coding仓库同步之后我们依次点击持续部署-静态网站开通Coding Page然后按照提示进行即可，部署成功后会免费提供给你一个域名（后续与GitHub类似就不做过多讲解了）</p><h2 id="博客主题"><a href="#博客主题" class="headerlink" title="博客主题"></a>博客主题</h2><blockquote><p>前面我们已经搭建好了自己的个人博客界面，这里我们深入学习一下hexo框架，首先我们修改一下hexo的主题，一个优美的博客主题往往会使你收到更多的流量，当然更多的是自己看着舒心。<br>这里我使用的是<a href="https://github.com/blinkfox/hexo-theme-matery">matery</a>主题，当然也可以从<a href="https://hexo.io/themes/">Hexo主题中心</a>选择自己喜欢的主题，下面我就以我使用的主题来进行讲解：</p></blockquote><h3 id="下载第三方主题"><a href="#下载第三方主题" class="headerlink" title="下载第三方主题"></a>下载第三方主题</h3><p>首先我们进入hexo-matery主题的<a href="https://github.com/blinkfox/hexo-theme-matery">GitHub仓库</a>，<br><img src="/2021/08/23/dajiangerenboke/theme1.png"><br>如图所示页面下滑找到Download主题，复制命令：<br><img src="/2021/08/23/dajiangerenboke/theme2.png"></p><pre><code class="bash">git clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><p>复制完成后我们再来到我们的博客的本地目录的themes文件夹下，使用Git Bash命令行工具下载 matery主题 <em>（注意：这里我安装过来，所以在themes下又新建了一个文件夹来下载，你们应该下载themes文件夹里）</em><br><img src="/2021/08/23/dajiangerenboke/theme3.png"><br><img src="/2021/08/23/dajiangerenboke/theme4.png"><br>恭喜！你成功下载了matery主题</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>上一步我们下载完了第三方主题，下面我们将hexo默认主题更换为我们下载的第三方主题<br>首先我们进入博客的本地目录，使用Notepad++打开_config.yml文件进行修改。<br><img src="/2021/08/23/dajiangerenboke/theme5.png"><br>按住Ctrl+F键搜索 <em>theme</em> 将theme: xxx 的xxx替换成你的主题名称。（例如我的主题是matery我的这里就应该是 <em>theme: matery</em>）</p><blockquote><p>注意：这里的冒号应该是英文的，而且：后面应该有一个空格，否则可能造成博客崩溃！！！</p></blockquote><p><img src="/2021/08/23/dajiangerenboke/theme6.png"><br>到这里我们的博客主题就已经安装成功了。</p><h3 id="博客背景、菜单栏等修改"><a href="#博客背景、菜单栏等修改" class="headerlink" title="博客背景、菜单栏等修改"></a>博客背景、菜单栏等修改</h3><p>博客背景、菜单栏等根据各主页的不同修改方式不同，具体请参照主题的GitHub仓库的官方文档修改.例如我的主题是matery，那么我的就去GitHub上搜索matery就可以进入主题仓库，根据文档修改即可，这里也就不做演示了。<br><img src="/2021/08/23/dajiangerenboke/theme7.png"></p><h2 id="编写博客"><a href="#编写博客" class="headerlink" title="编写博客"></a>编写博客</h2><h3 id="新建博客文件"><a href="#新建博客文件" class="headerlink" title="新建博客文件"></a>新建博客文件</h3><p>在博客存放路径下使用Git Bash命令行工具输入以下命令：</p><pre><code class="bash">hexo new &quot;****&quot;</code></pre><blockquote><p>将引号里面的***替换为你想要建立的博客文件的名称，下面我以love为名称作为演示：</p></blockquote><p><img src="/2021/08/23/dajiangerenboke/wenzhang1.png"><br><img src="/2021/08/23/dajiangerenboke/wenzhang2.png"><br>这样就是建立完成了，它会自动生成一个love.md文件和一个love文件夹（如果没有这个文件夹就是图片插件有点问题）</p><blockquote><p>love.md文件就是你的页面文件，编写博客内容都是在这里面编写，而love文件夹是用来存放引用的文件的，例如视频，图片之类的。</p></blockquote><h3 id="编写博客文件"><a href="#编写博客文件" class="headerlink" title="编写博客文件"></a>编写博客文件</h3><p>使用Notepad++打开love.md文件，对博客文件进行编写<br><img src="/2021/08/23/dajiangerenboke/wenzhang3.png"></p><blockquote><p>由于Hexo使用的是markdown语法，所以下面我们来介绍以下markdown语法用法</p></blockquote><h3 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h3><blockquote><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。    –摘自百度百科</p></blockquote><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>代码：</p><pre><code class="bash"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 最小只有六级标题</code></pre><p>效果：<br>会破坏博客目录，不予展示。</p><h4 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h4><p>代码：</p><pre><code class="bash">**加粗效果**</code></pre><p>效果：<br><strong>加粗测试</strong></p><h4 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h4><p>代码：</p><pre><code class="bash">*斜体效果*</code></pre><p>效果：<br><em>斜体效果</em></p><h4 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h4><p>代码：</p><pre><code class="bash">==高亮效果==</code></pre><p>效果：<br>主题原因不予展示（matery替换了原生的高亮代码）</p><h4 id="上标、下标"><a href="#上标、下标" class="headerlink" title="上标、下标"></a>上标、下标</h4><p><strong>该段与word用法一致</strong></p><h4 id="代码引用（-gt-式）"><a href="#代码引用（-gt-式）" class="headerlink" title="代码引用（&gt;式）"></a>代码引用（&gt;式）</h4><p>代码：</p><pre><code class="bash">&gt;引用效果</code></pre><p>效果：</p><blockquote><p>引用效果</p></blockquote><h4 id="代码引用（-式）"><a href="#代码引用（-式）" class="headerlink" title="代码引用（```式）"></a>代码引用（```式）</h4><p>代码</p><pre><code class="bash"># 不要复制这一句话，并且去掉下面的反斜杠！！！\`\`\`bashhello word！\`\`\`</code></pre><p>效果</p><pre><code class="bash">hello word！</code></pre><h4 id="插入链接（显示）"><a href="#插入链接（显示）" class="headerlink" title="插入链接（显示）"></a>插入链接（显示）</h4><p>代码</p><pre><code class="bash">https://blog.qltxy.cn/</code></pre><p>效果<br><a href="https://blog.qltxy.cn/">https://blog.qltxy.cn/</a></p><h4 id="插入链接（隐藏）"><a href="#插入链接（隐藏）" class="headerlink" title="插入链接（隐藏）"></a>插入链接（隐藏）</h4><p>代码</p><pre><code class="bash">[逆鳞科技的部落阁](https://blog.qltxy.cn/)</code></pre><p>效果<br><a href="https://blog.qltxy.cn/">逆鳞科技的部落阁</a></p><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><p>代码</p><pre><code class="bash">---</code></pre><p>效果<br>由于主题原因会破坏结构不予展示（就是一条线，一般用不到）</p><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>代码</p><pre><code class="bash">1. one2. two 3. three</code></pre><p>效果</p><ol><li>one</li><li>two </li><li>three</li></ol><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>代码</p><pre><code class="bash">* one* two* three</code></pre><p>效果</p><ul><li>one</li><li>two</li><li>three</li></ul><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p><strong>（第二行必须得有，并且第二行的冒号代表对齐格式，分别为居中；右对齐；左对齐）</strong><br>代码</p><pre><code class="bash">name | age | sex :-:|:-|-:wda|25|男dwd|6|女</code></pre><p>效果<br>name | age | sex<br>:-:|:-|-:<br>wda|25|男<br>dwd|6|女</p><h4 id="数学公式（行内嵌）"><a href="#数学公式（行内嵌）" class="headerlink" title="数学公式（行内嵌）"></a>数学公式（行内嵌）</h4><p>代码</p><pre><code class="bash">内嵌数学公式$\sum_&#123;i=1&#125;^&#123;10&#125;f(i)\,\,\text&#123;thanks&#125;$</code></pre><p>效果<br>内嵌数学公式$\sum_{i=1}^{10}f(i),,\text{thanks}$</p><h4 id="数学公式（块状）"><a href="#数学公式（块状）" class="headerlink" title="数学公式（块状）"></a>数学公式（块状）</h4><pre><code class="bash">$$\sum_&#123;i=1&#125;^&#123;10&#125;f(i)\,\,\text&#123;thanks&#125;$$</code></pre><p>效果<br>$$<br>\sum_{i=1}^{10}f(i),,\text{thanks}<br>$$</p><h4 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h4><h5 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h5><p>在hexo根目录打开Git Bash,执行以下代码</p><pre><code class="bash">npm install hexo-asset-image --save</code></pre><h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><p>打开hexo的全局配置文件_config.yml<br>查找 post_asset_folder选项，然后把false改成true<br><img src="/2021/08/23/dajiangerenboke/wenzhang4.png"></p><h5 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h5><p>在hexo目录下找到/node_modules/hexo-asset-image/index.js文件<br>用N++打开该文件，并将以下内容替换到该文件中：（该内容由Ericam_ 大神提供：<a href="https://blog.csdn.net/xjm850552586%EF%BC%89">https://blog.csdn.net/xjm850552586）</a></p><pre><code class="bash">&#39;use strict&#39;;var cheerio = require(&#39;cheerio&#39;);// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-stringfunction getPosition(str, m, i) &#123;  return str.split(m, i).join(m).length;&#125;var version = String(hexo.version).split(&#39;.&#39;);hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;  var config = hexo.config;  if(config.post_asset_folder)&#123;        var link = data.permalink;    if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)       var beginPos = getPosition(link, &#39;/&#39;, 1) + 1;    else       var beginPos = getPosition(link, &#39;/&#39;, 3) + 1;    // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.    var endPos = link.lastIndexOf(&#39;/&#39;) + 1;    link = link.substring(beginPos, endPos);    var toprocess = [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];    for(var i = 0; i &lt; toprocess.length; i++)&#123;      var key = toprocess[i];       var $ = cheerio.load(data[key], &#123;        ignoreWhitespace: false,        xmlMode: false,        lowerCaseTags: false,        decodeEntities: false      &#125;);      $(&#39;img&#39;).each(function()&#123;        if ($(this).attr(&#39;src&#39;))&#123;            // For windows style path, we replace &#39;\&#39; to &#39;/&#39;.            var src = $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;/&#39;);            if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;               !/^\s*\//.test(src)) &#123;              // For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.              // In addition, to support multi-level local directory.              var linkArray = link.split(&#39;/&#39;).filter(function(elem)&#123;                return elem != &#39;&#39;;              &#125;);              var srcArray = src.split(&#39;/&#39;).filter(function(elem)&#123;                return elem != &#39;&#39; &amp;&amp; elem != &#39;.&#39;;              &#125;);              if(srcArray.length &gt; 1)                srcArray.shift();              src = srcArray.join(&#39;/&#39;);              $(this).attr(&#39;src&#39;, config.root + link + src);              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);            &#125;        &#125;else&#123;            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);            console.info&amp;&amp;console.info($(this));        &#125;      &#125;);      data[key] = $.html();    &#125;  &#125;&#125;);</code></pre><h5 id="插入图片-1"><a href="#插入图片-1" class="headerlink" title="插入图片"></a>插入图片</h5><p>现在就可以插入图片了，比如hexo new “love”之后<br>就在source/_posts生成love.md文件和love文件夹，我们把要插入的图片复制到love文件夹内，<br>在love.md文件里面按markdown的标准写,（我的文件名是moban.png）</p><pre><code class="bash">![这是代替图片的文字，随便写](head.jpeg)</code></pre><p>例如我插入一个图片（无文字）：</p><pre><code class="bash">![](moban.png)</code></pre><p>效果：<br><img src="/2021/08/23/dajiangerenboke/moban.png"></p><p>例如我插入一个图片（有文字）：</p><pre><code class="bash">![模板](moban.png)</code></pre><p>效果：<br><img src="/2021/08/23/dajiangerenboke/moban.png" alt="模板"></p><h2 id="更换博客域名"><a href="#更换博客域名" class="headerlink" title="更换博客域名"></a>更换博客域名</h2><h3 id="域名准备"><a href="#域名准备" class="headerlink" title="域名准备"></a>域名准备</h3><p>1、在<a href="https://www.aliyun.com/">阿里云</a>、<a href="https://cloud.tencent.com/">腾讯云</a>和<a href="https://www.huaweicloud.com/">华为云</a>等云服务商家购买域名，这一步就不过多讲解了<br>2、通过<a href="https://www.freenom.com/zh/index.html?lang=zh">freenom</a>获取一个免费域名，然后通过<a href="https://www.dnspod.cn/">DNSPOS</a>进行分发。</p><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>这里我以<strong>腾讯云为例进行讲解</strong>，首先登陆<a href="https://console.cloud.tencent.com/cns">腾讯云DNS解析后台</a>,<br><img src="/2021/08/23/dajiangerenboke/yvming1.png"><br>点击解析进入<em>记录管理</em>添加两行记录</p><blockquote><p>主机记录建议填写blog，类型选择CNAME<br>github记录值填***.github.io.（***为你的GitHub昵称，例如我的昵称为WangGang-a1,我就填写WangGang-a1.github.io.）<br>coding的记录值需要根据coding自定义域名时显示的来填写<br><em><strong>注意：两个域名必须相同，这样使用起来方便</strong></em></p></blockquote><p><img src="/2021/08/23/dajiangerenboke/yvming2.png"></p><h3 id="GitHub仓库修改"><a href="#GitHub仓库修改" class="headerlink" title="GitHub仓库修改"></a>GitHub仓库修改</h3><p>进入你的GitHub仓库 进入Settings-GitHub Pages-Soyrce选择master<br>刷新一下网页进入GitHub Pages-Custom domain填入自定义的域名，例如我的是<em>blog.qltxy.cn</em><br><img src="/2021/08/23/dajiangerenboke/yvming3.png"></p><h3 id="Coding仓库修改"><a href="#Coding仓库修改" class="headerlink" title="Coding仓库修改"></a>Coding仓库修改</h3><p>进入Coding仓库的静态网站部署（新版页面为网站托管）<br><img src="/2021/08/23/dajiangerenboke/codingbs1.png"><br>进入部署依次点击 自定义域名-新建域名<br><img src="/2021/08/23/dajiangerenboke/codingbs2.png"><br>根据提示去你的域名解析里面添加，一定要与coding提供的信息完全相同，不然会出现错误。<br><img src="/2021/08/23/dajiangerenboke/codingbs3.png"><br>添加完成后就可以使用自己的域名访问啦！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>一顿操作下来虽然有点儿累，但看见拥有了私人博客还是非常有成就感的，人生嘛，不就是需要折腾，实践才能增长知识，我相信在不久的将来，你会从中受益良多！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 经验 </tag>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows安装无签名驱动</title>
      <link href="/2021/08/22/windowsanzhuangwuqianmingqudong/"/>
      <url>/2021/08/22/windowsanzhuangwuqianmingqudong/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p><em><strong>在日常玩机过程中合理使用百度是一个好习惯，但是自己慢慢研究会更好，先学后师~</strong></em></p></blockquote><h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><blockquote><p>在设置中找到更新与安全，里面找到恢复，点击高级启动中的立即重新启动。</p></blockquote><p><img src="/2021/08/22/windowsanzhuangwuqianmingqudong/jyqd1.jpg"><br><img src="/2021/08/22/windowsanzhuangwuqianmingqudong/jyqd2.jpg"></p><blockquote><p>然后选择疑难解答——高级选项——启动设置中点击重启，按F7进入系统。</p></blockquote><p><img src="/2021/08/22/windowsanzhuangwuqianmingqudong/jyqd3.jpg"><br><img src="/2021/08/22/windowsanzhuangwuqianmingqudong/jyqd4.jpg"><br><img src="/2021/08/22/windowsanzhuangwuqianmingqudong/jyqd5.jpg"><br><img src="/2021/08/22/windowsanzhuangwuqianmingqudong/jyqd6.jpg"><br><img src="/2021/08/22/windowsanzhuangwuqianmingqudong/jyqd7.jpg"></p><blockquote><p>以禁用驱动程序强制签名进入系统以后，再安装驱动文件，在弹出的窗口中选择始终安装此驱动程序软件，这样就可以安装了。 </p></blockquote><p><img src="/2021/08/22/windowsanzhuangwuqianmingqudong/jyqd8.jpg"><br><img src="/2021/08/22/windowsanzhuangwuqianmingqudong/jyqd9.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Windows玩机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AX200安装杀手AX1650驱动</title>
      <link href="/2021/08/22/ax200anzhuangshashouax1650qudong/"/>
      <url>/2021/08/22/ax200anzhuangshashouax1650qudong/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><blockquote><p>首先以AX200为例说一下AX200和AX1650的关系。在Intel ark上查询了发现它们的网络规格是完全相同的，差别仅在于是否支持英特尔的博锐技术，这就说明这两网卡实际上是同一个网卡，在硬件方面他们是相同的，只是硬件ID的不同。那么区别就出在驱动层面了，因此通过“魔改”杀手驱动里的安装信息，达到让AX200安装上AX1650的驱动的从而提升网卡性能。<br><strong>理论上将其他网卡也可以这么操作，本教程以AX200为例进行演示其他网卡只需要更改一下硬件id即可</strong></p></blockquote><h2 id="网卡信息对比"><a href="#网卡信息对比" class="headerlink" title="网卡信息对比"></a>网卡信息对比</h2><p><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer1.jpg"><br><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer2.jpg"></p><h2 id="各网卡对应驱动"><a href="#各网卡对应驱动" class="headerlink" title="各网卡对应驱动"></a>各网卡对应驱动</h2><table><thead><tr><th align="center">AC9260</th><th align="left">AC9560</th><th align="right">AC9560(板载)</th><th align="left">AX200</th><th align="right">AX200(板载)</th></tr></thead><tbody><tr><td align="center">AC1550</td><td align="left">AC1550i</td><td align="right">AC1550S</td><td align="left">AX1650x</td><td align="right">AX1650w</td></tr><tr><td align="center">AX201</td><td align="left">AX201(板载)</td><td align="right">AX210</td><td align="left">AX210(板载)</td><td align="right">AR5B22</td></tr><tr><td align="center">AX1650i</td><td align="left">AX1650s</td><td align="right">AX1675x</td><td align="left">AX1675w</td><td align="right">N1202</td></tr></tbody></table><blockquote><p><strong>注意：AR5B22不支持Killer Control Center</strong><br>       <strong>AX201系列可能无法正常驱动</strong></p></blockquote><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><blockquote><p>首先我们在开始之前要进入电脑的安全模式，怎么进入参照我另一篇博客：<a href="https://blog.qltxy.cn/2021/08/22/windowsanzhuangwuqianmingqudong/">Windows安装无签名驱动</a></p></blockquote><h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><h3 id="下载源文件"><a href="#下载源文件" class="headerlink" title="下载源文件"></a>下载源文件</h3><blockquote><p>我们先去<a href="https://www.killernetworking.com/">killer</a>官网下载杀手的驱动</p></blockquote><p><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer3.jpg"></p><blockquote><p>我们下载<a href="https://www.intel.com/content/www/us/en/download/19812/intel-killer-performance-suite-beta-version-3-0-1564.html">Intel® Killer™ Wi-Fi 6 AX1650 (x/w)</a>这个驱动<br>如果下载过慢可以尝试开个 <em><strong>小飞机</strong></em></p></blockquote><h3 id="安装killer驱动包"><a href="#安装killer驱动包" class="headerlink" title="安装killer驱动包"></a>安装killer驱动包</h3><blockquote><p>驱动下载完成后运行安装包，如果遇到未检测到兼容硬件错误按住ctel+n建就可以继续安装了</p></blockquote><p><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer4.jpg"><br><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer5.jpg"></p><blockquote><p><strong>这里要注意杀手安装包不要关闭</strong></p></blockquote><p><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer6.jpg"></p><blockquote><p>默认选择完整安装等待安装完成即可，安装过程和常规软件一样的。</p></blockquote><p><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer7.jpg"></p><h3 id="定位需要修改的文件"><a href="#定位需要修改的文件" class="headerlink" title="定位需要修改的文件"></a>定位需要修改的文件</h3><blockquote><p>安装完成后进入</p></blockquote><pre><code class="bash">C:\Program Files\Killer Networking\Killer Control Center\Production\Windows10-x64\11ACW2\netwtw08.inf </code></pre><blockquote><p>在这个目录下打开netwtw08.inf这个文件备用。<br><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer8.jpg"></p></blockquote><pre><code class="bash">C:\Program Files\Killer Networking\Killer Control Center\KillerNetworkExtension.inf</code></pre><blockquote><p>然后再在这个目录下打开KillerNetworkExtension.inf这个文件备用。<br><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer9.jpg"></p></blockquote><blockquote><p>注意：由于这文件是在C盘里面的所以我们要以管理员身份进行编辑和保存操作。也可以先把他复制出来使用记事本编辑完成后再替换源文件<br><em><strong>ps：进行任何修改系统文件操作时都要记得备份哦！！！</strong></em><br>打开文件后Ctrl+F搜索Killer 1650X，找到图片中这行：</p></blockquote><p><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer11.jpg"></p><blockquote><p>然后打开设备管理器，在网络适配器中找到AX200网卡，点击属性，弹出的窗口选择详细信息选项卡，找到硬件ID这一栏，复制这个网卡的硬件ID。 </p></blockquote><p><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer12.jpg"></p><blockquote><p>将这一行信息复制下来</p></blockquote><h3 id="修改KillerNetworkExtension-inf文件"><a href="#修改KillerNetworkExtension-inf文件" class="headerlink" title="修改KillerNetworkExtension.inf文件"></a>修改KillerNetworkExtension.inf文件</h3><p><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer13.jpg"></p><blockquote><p>然后回到文件中替换到我标注的那个位置，替换完成后保存将该文件替换源文件</p></blockquote><p><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer14.jpg"></p><h3 id="修改netwtw08-inf文件"><a href="#修改netwtw08-inf文件" class="headerlink" title="修改netwtw08.inf文件"></a>修改netwtw08.inf文件</h3><blockquote><p>同理将硬件id替换到AX1650x的id位置：<br><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer10.jpg"></p></blockquote><h3 id="安装驱动描述文件："><a href="#安装驱动描述文件：" class="headerlink" title="安装驱动描述文件："></a>安装驱动描述文件：</h3><blockquote><p>然后分别安装KillerNetworkExtension.inf和KillerNetworkComponent.inf，不过因为第一个文件是被我们修改了的，可能会出现无法安装的错误。如果没有就无视如果出现这个情况请移步到我另一篇教程中查询解决方案：<a href="https://blog.qltxy.cn/2021/08/22/windowsanzhuangwuqianmingqudong/">Windows安装无签名驱动</a><br>1.【netwtw08.inf】硬件驱动描述文件<br>2.【KillerNetworkExtension.inf】软件驱动描述文件<br>3.【KillerNetworkComponent.inf】软件组件描述文件<br><em><strong>注意：安装的先后顺序不能颠倒</strong></em></p></blockquote><p><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer15.jpg"></p><h3 id="下载控制中心"><a href="#下载控制中心" class="headerlink" title="下载控制中心"></a>下载控制中心</h3><blockquote><p>安装完这两个INF以后，等一小会系统就会自动从微软商店下载杀手的控制中心（我的情况是这样）没有的话去Windows商店搜索<a href="https://www.microsoft.com/zh-cn/p/killer-control-center-beta/9nlv5g0p55tz?rtc=1&activetab=pivot:overviewtab">Killer Control Center</a>下载安装即可。 </p></blockquote><p><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer16.jpg"><br><img src="/2021/08/22/ax200anzhuangshashouax1650qudong/AX200killer17.jpg"></p><blockquote><p>到这里的话我们就成功了，享受网速的提升吧！！！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Killer </category>
          
          <category> 网卡 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AX200 </tag>
            
            <tag> AX210 </tag>
            
            <tag> AX201 </tag>
            
            <tag> Killer </tag>
            
            <tag> 网卡 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
